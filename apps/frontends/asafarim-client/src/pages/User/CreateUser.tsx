import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { createUser } from '../../api/userService';
import { IUser } from '../../interfaces/IUser';

const CreateUser: React.FC = () => {
  const [user, setUser] = useState<IUser>({
    id: '', // This can be auto-generated by the backend
    isAdmin: false, // Assuming new users are not admin by default
    email: '',
    fullName: ''
  });

  const navigate = useNavigate();

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setUser({ ...user, [name]: value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    try {
      // Send only the necessary fields
      const userToCreate = {
        email: user.email,
        fullName: user.fullName,
        isAdmin: user.isAdmin
        // Exclude fields like id and createdAt since they are either auto-generated or not part of the interface
      };

      await createUser(userToCreate); // Call the service to create the user
      navigate('/users'); // Redirect to the user list after successful creation
    } catch (error) {
      console.error('Error creating user:', error);
    }
  };

  return (
    <div className="max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg">
      <h1 className="text-2xl font-semibold text-gray-700 mb-6">Create New User</h1>
      <form onSubmit={handleSubmit} className="space-y-4">
        {/* Full Name */}
        <div>
          <label className="block text-gray-600">Full Name</label>
          <input
            type="text"
            name="fullName"
            value={user.fullName}
            onChange={handleInputChange}
            className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            required
          />
        </div>

        {/* Email */}
        <div>
          <label className="block text-gray-600">Email</label>
          <input
            type="email"
            name="email"
            value={user.email}
            onChange={handleInputChange}
            className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
            required
          />
        </div>

        {/* Admin Status */}
        <div>
          <label className="block text-gray-600">Is Admin</label>
          <select
            name="isAdmin"
            value={user.isAdmin ? 'true' : 'false'}
            onChange={(e) => setUser({ ...user, isAdmin: e.target.value === 'true' })}
            className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            <option value="false">No</option>
            <option value="true">Yes</option>
          </select>
        </div>

        {/* Submit Button */}
        <button
          type="submit"
          className="w-full py-2 px-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 mt-6"
        >
          Create User
        </button>
      </form>
    </div>
  );
};

export default CreateUser;
