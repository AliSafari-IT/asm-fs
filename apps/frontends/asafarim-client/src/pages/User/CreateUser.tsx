import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { createUser } from '../../api/userService';
import { IUser } from '../../interfaces/IUser';
import Wrapper from '../../layout/Wrapper/Wrapper';
import Footer from '../../layout/Footer/Footer';

const CreateUser: React.FC = () => {
  const [user, setUser] = useState<IUser>({
    id: '', // This can be auto-generated by the backend
    isAdmin: false, // Assuming new users are not admin by default
    email: '',
    fullName: '',
    remark: ''
  });

  const navigate = useNavigate();

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setUser({ ...user, [name]: value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    try {
      // Send only the necessary fields
      const userToCreate = {
        email: user.email,
        fullName: user.fullName,
        isAdmin: user.isAdmin
        // Exclude fields like id and createdAt since they are either auto-generated or not part of the interface
      };

      await createUser(userToCreate); // Call the service to create the user
      navigate('/users'); // Redirect to the user list after successful creation
    } catch (error) {
      console.error('Error creating user:', error);
    }
  };

  return (
    <Wrapper header={''} footer={<Footer />}>
        <h1 className="text-2xl font-semibold  mb-6">Create New User</h1>
        <form onSubmit={handleSubmit} className="">
          {/* Full Name */}
          <div>
            <label className="block text-sm font-medium  mb-2">Full Name</label>
            <input
              type="text"
              name="fullName"
              placeholder='Full Name'
              value={user.fullName}
              onChange={handleInputChange}
              className="w-full px-4 py-3 border "
              required
            />
          </div>

          {/* Email */}
          <div>
            <label className="block text-sm font-medium  mb-2">Email</label>
            <input
              type="email"
              name="email"
              value={user.email}
              onChange={handleInputChange}
              className="w-full px-4 py-3 border "
              required
            />
          </div>
          {/* Bio */}
          <div>
            <label className="block text-sm font-medium  mb-2">Bio</label>
            <textarea
              name="remark"
              value={user.remark}
              onChange={handleInputChange}
              className="w-full px-4 py-3 border "
              required
            />
          </div>
          {/* Admin Status */}
          <div>
            <label className="block text-sm font-medium  mb-2">Is Admin</label>
            <select
              name="isAdmin"
              value={user.isAdmin ? 'true' : 'false'}
              onChange={(e) => setUser({ ...user, isAdmin: e.target.value === 'true' })}
              className="w-full px-4 py-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="false">No</option>
              <option value="true">Yes</option>
            </select>
          </div>

          {/* Submit Button */}
          <div>
            <button
              type="submit"
              className="w-full py-3 px-4 mt-6 info font-semibold rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              Create User
            </button>
          </div>
        </form>
    </Wrapper>
  );
};

export default CreateUser;
